<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DESKTOP-TTAFVAK" failures="0" tests="14" name="RestAssuredTestCases.RestAssuredBasics" time="1.001" errors="1" timestamp="31 May 2021 14:23:18 GMT" skipped="13">
  <testcase classname="RestAssuredTestCases.RestAssuredBasics" name="soapexample" time="1.001">
    <error message=".\Payload\addreq.xml (The system cannot find the path specified)" type="java.io.FileNotFoundException">
      <![CDATA[java.io.FileNotFoundException: .\Payload\addreq.xml (The system cannot find the path specified)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:211)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:153)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:108)
at RestAssuredTestCases.RestAssuredBasics.soapexample(RestAssuredBasics.java:266)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- soapexample -->
  <testcase classname="RestAssuredTestCases.RestAssuredBasics" name="putmethod">
    <skipped/>
  </testcase> <!-- putmethod -->
  <testcase classname="RestAssuredTestCases.RestAssuredBasics" name="datasourceexample">
    <skipped/>
  </testcase> <!-- datasourceexample -->
  <testcase classname="RestAssuredTestCases.RestAssuredBasics" name="jsonbody">
    <skipped/>
  </testcase> <!-- jsonbody -->
  <testcase classname="RestAssuredTestCases.RestAssuredBasics" name="pojoexample">
    <skipped/>
  </testcase> <!-- pojoexample -->
  <testcase classname="RestAssuredTestCases.RestAssuredBasics" name="queryparameterexample">
    <skipped/>
  </testcase> <!-- queryparameterexample -->
  <testcase classname="RestAssuredTestCases.RestAssuredBasics" name="postmethod">
    <skipped/>
  </testcase> <!-- postmethod -->
  <testcase classname="RestAssuredTestCases.RestAssuredBasics" name="fetchjsonfile">
    <skipped/>
  </testcase> <!-- fetchjsonfile -->
  <testcase classname="RestAssuredTestCases.RestAssuredBasics" name="patchmethod">
    <skipped/>
  </testcase> <!-- patchmethod -->
  <testcase classname="RestAssuredTestCases.RestAssuredBasics" name="deletemethod">
    <skipped/>
  </testcase> <!-- deletemethod -->
  <testcase classname="RestAssuredTestCases.RestAssuredBasics" name="getmethod">
    <skipped/>
  </testcase> <!-- getmethod -->
  <testcase classname="RestAssuredTestCases.RestAssuredBasics" name="secondtest">
    <skipped/>
  </testcase> <!-- secondtest -->
  <testcase classname="RestAssuredTestCases.RestAssuredBasics" name="thirdtest1">
    <skipped/>
  </testcase> <!-- thirdtest1 -->
  <testcase classname="RestAssuredTestCases.RestAssuredBasics" name="firsttest">
    <skipped/>
  </testcase> <!-- firsttest -->
</testsuite> <!-- RestAssuredTestCases.RestAssuredBasics -->
